#!/bin/sh

###########################################################
# LSNET - Network Device 1.3 by Washington Rodrigues 2008 #
###########################################################
IRQC=0
IOHA=0
MACE=0

NETWORK=`/sbin/lshw -disable ide -disable cpuid -C network -xml 2>/dev/null`
if [ "$1" != "-short" ]; then
   echo "Loading information..." >&2
   echo "" >&2
   echo " LSNET - Network Device 1.3 by Washington Rodrigues 2008 "
   echo "========================================================="
   echo
fi

get_value() {
   ARG=`echo "$ETHERNET" | grep -i "<setting id=\"$1\>" | sed s/.*value=\"//g | sed s/\".*//g`
   [ -n "$ARG" ] && echo $ARG || echo "UNKNOWN"
}
get_resource() {
   ARG=`echo "$ETHERNET" | grep -i "<resource type=\"$1\>" | sed s/.*value=\"//g | sed s/\".*//g`
   [ -n "$ARG" ] && echo $ARG || echo "UNKNOWN"
}

get_dat() {
   ARG=`echo "$ETHERNET" | grep -i "<$1>" | sed s/.*\<$1\>//g | sed s/\<.*//g`
   [ -n "$ARG" ] && echo $ARG || echo "UNKNOWN"
}

get_status() {
   ARG=`echo "$ETHERNET" | grep -i "<node id=\"network" | sed s/.*disabled=\"//g | sed s/\".*//g`
   [ "$ARG" = "true" ] && echo "DISABLED" || echo "ENABLED"
}

ethinfo() {
   nInfo=`ifconfig -a "$1" 2>/dev/null`
   RXerror=`echo -e "$nInfo" | grep -i "RX packets:" | sed s/.*errors://g | sed s/\ .*//g`;[ -z "$RXerror" ] && RXerrot="N/A"
   TXerror=`echo -e "$nInfo" | grep -i "TX packets:" | sed s/.*errors://g | sed s/\ .*//g`;[ -z "$TXerror" ] && TXerrot="N/A"
   COLLISIONS=`echo -e "$nInfo" | grep -i "collisions:" | sed s/.*collisions://g | sed s/\ .*//g`;[ -z "$COLLISIONS" ] && COLLISIONS="N/A"
   FACETYPE=`cat /tmp/netsubsys.state | grep "$1\>" | sed s/.*_//g | sed s/=.*//g`
   if [ -n "$FACETYPE" ]; then
      [ "$FACETYPE" = "INET" ] && FACETYPE="INTERNET" || FACETYPE="LOCAL"
   else
      FACETYPE="N/A"
   fi

}
COUNT=0
echo "$NETWORK" | grep -i "<physid\>" | sed s/[^0123456789]//g | sort | while read PHYSICAL; do
                LN=`echo "$NETWORK" | grep -n "" | grep -i "<physid>$PHYSICAL" | cut -f1 -d":"`
                POSEND=$((LN+100))
                for POS in $(seq $LN -1 0); do
                    POS=`echo "$NETWORK" | grep -n "" | grep -i "^$POS:" | grep -i "<node id" | cut -f1 -d":"`
                    if [ -n "$POS" ]; then
                       POSINI="$POS"
                       break
                    fi
                done
                              
                for POS in $(seq $LN $POSEND); do
                    aPOS=`echo  "$NETWORK" | grep -n "" | grep -i "^$POS:" | grep -i "</node>" | cut -f1 -d":"`
                    if [ -n "$aPOS" ]; then
                       POSEND="$aPOS"
                       break
                    fi
                done
                                
                
                ETHERNET=`echo -n "$NETWORK" | sed $POSINI,$POSEND!d`
                INTERFACE="$(get_dat "logicalname")"
                if [ "$(echo $INTERFACE | sed s/[0123456789]//g)" != "bond" -a "$(echo $INTERFACE | sed s/[0123456789]//g)" != "gre" ]; then
                   IPADDRESS="$(get_value "ip")"
                   DRIVER="$(get_value "driver")"
                   IRQ="$(get_resource "irq")"
                   IOPORT="$(get_resource "ioport")"; [ "$IOPORT" = "UNKNOWN" ] && IOHA=$((IOHA+1))
                   DEVICEID="$PHYSICAL"
                   VENDOR="$(get_dat "vendor")"
                   MODEL="$(get_dat "product")"
                   MAC="$(get_dat "serial")";[ "$MAC" = "UNKNOWN" ] && MACE=$((MACE+1))
                   STATUS="$(get_status)"
                   IPADD="$([ -n "$IPADDRESS" ] && echo "$IPADDRESS" || echo "0.0.0.0")"
                   LINK="$([ "$(get_value "link")" = "yes" ] && echo "UP" || echo "DOWN")"
                   SPEED="$(get_value "speed")"
                   [ -z "$SPEED" ] && SPEED="UNKNOWN"
                   ethinfo "$INTERFACE"

                   [ -z "$IOPORT" ] && IOPORT="N/A"
                   if [ "$1" != "-short" ]; then
                      if [ -z "$IRQ" ]; then
                         IRQ="N/A";IRQC=$((IRQC+1))
                      fi
                   fi 
                   if [ "$1" != "-short" ]; then
                      echo "Device ID....: $DEVICEID"
                      echo "Vendor.......: $VENDOR"
                      echo "Model........: $MODEL"
                      echo "Driver.......: $DRIVER"
                      echo "Mac Address..: $MAC"
                      echo "Interface....: $INTERFACE"
                      echo "Status.......: $STATUS"
                      echo "IP Address...: $IPADD"
                      echo "Link Status..: $LINK"
                      echo "Link Type....: $FACETYPE"
                      echo "IRQ..........: $IRQ"
                      echo "I/O Hardware.: $IOPORT"
                      echo "Link Speed...: $SPEED"
                      echo "RX Error.....: $RXerror"
                      echo "TX Error.....: $TXerror"
                      echo "Collisions...: $COLLISIONS"
                      echo
                   else
                      echo "$DEVICEID#$INTERFACE#$VENDOR#$MODEL#$DRIVER#$MAC"
                   fi

                   if [ "$1" != "-short" ]; then
                      COUNT=$((COUNT+1))
                      echo "$COUNT" > /tmp/lsnet.count
                      echo "$IRQC" > /tmp/lsnet.irqc
                      echo "$IOHA" > /tmp/lsnet.ioha
                      echo "$MACE" > /tmp/lsnet.mace
                   fi
                fi
done
if [ "$1" != "-short" ]; then
   echo
   echo "Summary:"
   echo
   echo "Description       Error(s)"
   echo "================================"
   echo "IRQ Conflict      $(cat /tmp/lsnet.irqc)"
   echo "I/O Hardware      $(cat /tmp/lsnet.ioha)"
   echo "MAC Address       $(cat /tmp/lsnet.mace)"
   echo "================================"
   echo "Found $(cat /tmp/lsnet.count) Device(s)";rm -f /tmp/lsnet.* 2>/dev/null
   echo "================================"
   echo
fi