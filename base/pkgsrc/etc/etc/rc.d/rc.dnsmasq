#!/bin/sh
#
# Build resolv.conf, resolv.dns and hosts
# Loads the dnsmasq as needed
# Author: Claudio Roberto Cussuol
#

CONF_FILE1=/etc/dnsmasq.conf
CONF_FILE2=/etc/resolv.conf

. /etc/coyote/coyote.conf

[ -e /tmp/netsubsys.state ] && \
 { . /tmp/netsubsys.state; LOCAL_IPADDR=`getifaddr $IF_LOCAL`; }

RESOLVFILE="$CONF_FILE2"

if [ "$INETTYPE" = "ETHERNET_DHCP" ]; then
 [ -e "/etc/dhcpc/$IF_INET.info" ] && . /etc/dhcpc/$IF_INET.info
fi

[ -z "$DOMAINNAME" -a -n "$dhcp_domain" ] && DOMAINNAME="$dhcp_domain"
[ -z "$DOMAINNAME" -a -n "$DHCPD_DOMAIN" ] && DOMAINNAME="$DHCPD_DOMAIN"
[ -z "$DOMAINNAME" ] && DOMAINNAME="localdomain"
HOSTNAME=`hostname`
[ -z "$DNS_CACHE" ] && DNS_CACHE="150"
[ -z "$DNS_TTL" ] && DNS_TTL="60"
[ -z "$DHCPD_LMAX" ] && DHCPD_LMAX="150"

#==================================
treat_line2() {
while [ -n "$1" ]; do 
 if [ "`echo $1 | cut -f 1 -d :`" != "$1" ]; then
	MAC="$1"
 elif [ "`echo $1 | cut -f 1 -d .`" != "$1" ]; then
	IP="$1"
 elif [ -z "$IP" -a -z "$HOST" ]; then
	HOST="$1"
 else
	TIME="$1"
 fi  
 shift
done
}

#==================================
treat_line() {
TLINE=`echo "$1" | cut -f 2 -d = | sed s/\,/\ /g`
IP=""
HOST=""
MAC=""
TIME=""
treat_line2 $TLINE
[ -n "$IP" -a -n "$HOST" ] && echo $IP $HOST >> /etc/hosts
}

RUNNING="NO"
if [ -e /var/run/dnsmasq.pid ]; then
 [ -z "`pidof dnsmasq`" ] || RUNNING="YES"
fi
if [ "$RUNNING" = "YES" ]; then
 echo "Stopping DNS and DHCP server"
 kill "`cat /var/run/dnsmasq.pid`" 2> /dev/null
 rm -f /var/run/dnsmasq.pid 2> /dev/null
# [ -e /etc/resolv.dns ] && cp /etc/resolv.dns $CONF_FILE2
fi

echo "Generating hosts Configuration file..."
echo -e "127.0.0.1\t\tlocalhost" > /etc/hosts
[ -n "$LOCAL_IPADDR" ] && { echo -e -n "$LOCAL_IPADDR\t" >> /etc/hosts; echo "$HOSTNAME" >> /etc/hosts; }

if [ -e /etc/hosts.dns ]; then
 while read TMPLINE ; do
	case "$TMPLINE" in
	 \#*|"") continue;;
	 *) echo "$TMPLINE" >> /etc/hosts;;
	esac
 done < /etc/hosts.dns
fi

if [ -e /etc/dhcpd.reservations ]; then
 while read TMPLINE ; do
	case "$TMPLINE" in
	 \#*|"") continue;;
	 dhcp-host=*) treat_line "$TMPLINE";;
	esac
 done < /etc/dhcpd.reservations
fi

echo "Generating resolv.conf Configuration file..."
rm -f /etc/resolv.dns
echo "domain $DOMAINNAME" > $CONF_FILE2

if [ -n "$DNS1" ]; then
 echo "nameserver $DNS1" >> $CONF_FILE2
 [ -n "$DNS2" ] && echo "nameserver $DNS2" >> $CONF_FILE2
 [ -n "$DNS3" ] && echo "nameserver $DNS3" >> $CONF_FILE2
else
 [ -e /tmp/realdns1 ] && echo "nameserver `cat /tmp/realdns1`" >> $CONF_FILE2
 [ -e /tmp/realdns2 ] && echo "nameserver `cat /tmp/realdns2`" >> $CONF_FILE2
 [ -e /tmp/realdns3 ] && echo "nameserver `cat /tmp/realdns3`" >> $CONF_FILE2
fi
chmod go+r $CONF_FILE2

if [ "$USE_DNS_CACHE" = "YES" ] ; then
 RESOLVFILE="/etc/resolv.dns"
 cp $CONF_FILE2 $RESOLVFILE
 echo "domain $DOMAINNAME" > $CONF_FILE2
 echo "nameserver 127.0.0.1" >> $CONF_FILE2
 chmod go+r $CONF_FILE2
fi

if [ "$DHCPSERVER" = "YES" -o "$USE_DNS_CACHE" = "YES" ]; then
 echo "Generating DHCP Configuration file..."

 if [ -z "$DHCPD_DOMAIN" ]; then
	DHCPD_DOMAIN=`grep "domain " $RESOLVFILE | cut -f 2 -d " "`
	[ -z "$DHCPD_DOMAIN" ] && DHCPD_DOMAIN=`grep "search " $RESOLVFILE | cut -f 2 -d " "`
	[ -z "$DHCPD_DOMAIN" ] && [ -z "$DOMAINNAME" ] && DHCPD_DOMAIN=localdomain || DHCPD_DOMAIN="$DOMAINNAME"
 fi

 echo "user=root" > $CONF_FILE1
 echo "group=root" >> $CONF_FILE1
 echo "domain-needed" >> $CONF_FILE1
 echo "bogus-priv" >> $CONF_FILE1
 echo "expand-hosts" >> $CONF_FILE1
 echo "filterwin2k" >> $CONF_FILE1
 echo "cache-size=$DNS_CACHE" >> $CONF_FILE1
 echo "local-ttl=$DNS_TTL" >> $CONF_FILE1
 echo "dns-forward-max=$((DHCPD_LMAX * 2))" >> $CONF_FILE1
 if ! [ -z "$DHCPD_DOMAIN" ]; then
#	echo "local=/${DHCPD_DOMAIN}/" >> $CONF_FILE1
	echo "domain=${DHCPD_DOMAIN}" >> $CONF_FILE1
 fi

 [ "$USE_DNS_CACHE" = "YES" ] && echo "resolv-file=/etc/resolv.dns" >> $CONF_FILE1
 if [ "$DHCPSERVER" = "YES" ]; then
	echo "dhcp-authoritative" >> $CONF_FILE1
	echo "dhcp-lease-max=$DHCPD_LMAX" >> $CONF_FILE1
	[ "$DHCPD_INAMES" = "YES" ] &&  echo "dhcp-ignore-names" >> $CONF_FILE1
	[ "$DHCPD_UCLIENT" = "YES" ] && echo "dhcp-ignore=#known
dhcp-host=*:*:*:*:*:*,ignore
dhcp-script=/test.sh" >> $CONF_FILE1
	[ -z "$DHCPD_LEASE" ] && DHCPD_LEASE=7200
	echo "dhcp-leasefile=/var/state/dhcp/dhcpd.leases" >> $CONF_FILE1
	echo "dhcp-range=${DHCPD_START_IP},${DHCPD_END_IP},${DHCPD_LEASE}" >> $CONF_FILE1

	if [ ! -z "$DHCPD_DNS1" ]; then
	 echo -n "dhcp-option=6,$DHCPD_DNS1" >> $CONF_FILE1
	 [ -z "$DHCPD_DNS2" ] || echo -n ",$DHCPD_DNS2" >> $CONF_FILE1 
	 [ -z "$DHCPD_DNS3" ] || echo -n ",$DHCPD_DNS3" >> $CONF_FILE1
	 echo "" >> $CONF_FILE1
	else	
	 if [ ! "$USE_DNS_CACHE" = "YES" ]; then
		echo -n "dhcp-option=6" >> $CONF_FILE1
		grep "nameserver " $RESOLVFILE | while read NAMETMP; do
		 DNSSRV=`echo $NAMETMP | cut -f 2 -d " "`
		 if ! [ -z "$DNSSRV" ]; then
	    		echo -n ",$DNSSRV" >> $CONF_FILE1
		 else
			echo -n ",$LOCAL_IPADDR" >> $CONF_FILE1
		 fi
		done
		echo "" >> $CONF_FILE1	   
	 fi
	fi
	[ -z "$DHCPD_WINS1" ] || echo "dhcp-option=44,$DHCPD_WINS1" >> $CONF_FILE1
	[ -z "$DHCPD_WINS2" ] || echo "dhcp-option=44,$DHCPD_WINS2" >> $CONF_FILE1
	[ ! -z "$DHCPD_SUBNET" ] && echo "dhcp-option=1,$DHCPD_SUBNET" >> $CONF_FILE1
	[ ! -z "$DHCPD_ROUTER" ] && echo "dhcp-option=3,$DHCPD_ROUTER" >> $CONF_FILE1
	if [ -e /etc/dhcpd.reservations ]; then
	 while read TMPLINE ; do
		case "$TMPLINE" in
		 \#*|"") continue;;
		 dhcp-host=*) echo "$TMPLINE" >> $CONF_FILE1;;
		esac
	 done < /etc/dhcpd.reservations
	fi
 fi
 [ -e "$CONF_FILE1.template" ] && cat $CONF_FILE1.template >> $CONF_FILE1
fi

if [ "$USE_DNS_CACHE" = "YES" -o "$DHCPSERVER" = "YES" ]; then
 echo "Starting DNS and DHCP server"
/usr/sbin/dnsmasq --log-async
fi
